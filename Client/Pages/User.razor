@page "/user/{id:int}"
@inject IUserService UserService
@inject IGroupService GroupService
@inject ISmsService SmsService
@inject NavigationManager NavigationManager
@inject ILogger<User> Logger

<h3>User</h3>

@if (UserService.User == null)
{
    <span>Loading...</span>
}
else
{
    <EditForm Model="UserService.User" OnSubmit="UpdateUser">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="mb-0">
                <label for="name">Name</label>
                <InputText id="name" @bind-Value="UserService.User.Name" class="form-control"></InputText>
                <ValidationMessage For="@(() => UserService.User.Name)"/>
            </div>
            <div class="mb-0">
                <label for="email">E-Mail</label>
                <InputText id="email" @bind-Value="UserService.User.Email" class="form-control"></InputText>
                <ValidationMessage For="@(() => UserService.User.Email)" />
            </div>
            <div class="mb-0">
                <label for="phone">Phone number</label>
                <InputText id="phone" @bind-Value="UserService.User.PhoneNumber" class="form-control"></InputText>
                <ValidationMessage For="@(() => UserService.User.PhoneNumber)" />
            </div>
            <div class="form-check">
                <label for="bussiness">Bussiness</label>
                <InputCheckbox id="bussiness" @bind-Value="UserService.User.Bussiness" class="form-check-input"></InputCheckbox>
                <ValidationMessage For="@(() => UserService.User.Bussiness)" />
            </div>
            <div class="mb-0">
                <label for="tax">Tax number</label>
                <InputText id="tax" @bind-Value="UserService.User.TaxNumber" class="form-control"></InputText>
                <ValidationMessage For="@(() => UserService.User.TaxNumber)" />
            </div>
            <div class="mb-0">
                <label for="group">Group</label>
                <InputSelect id="group" @bind-Value="UserService.User.Group.Id" class="form-control">
                    @foreach (var group in GroupService.Groups)
                    {
                        <option value="@group.Id">@group.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => UserService.User.Group)" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary" @onclick="UpdateUser">
            <i class="oi oi-plus"></i> Save
        </button>
        <button type="button" class="btn btn-primary" @onclick="SendSMS">
            Send SMS through
            @if (@SmsService.Provider == null)
            {
                <span>Loading...</span>
            }
            else
            {
                @SmsService.Provider.Name
            }
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await UserService.GetUser(Id);
            await GroupService.GetGroups();
            await SmsService.GetProvider();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.ToString());
        }
    }

    private async Task UpdateUser()
    {
        try
        {
            if (Id == 0)
            {
                await UserService.AddUser(UserService.User);
            }
            else
            {
                await UserService.UpdateUser(UserService.User);
            }

            NavigationManager.NavigateTo("/users");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex.ToString());
        }
    }

    private async Task SendSMS()
    {
        var sms = new Sms()
            {
                To = "Jan",
                From = "Peter",
                Body = "Lorem Ipsum"
            };

        await SmsService.SendSMS(sms);
    }
}

